<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.org.team4.dao.MessageDAO">
	<select id="getMessageRoomListInit" parameterType="long" resultType="MessageListDTO">
		SELECT * 
		FROM (
		        SELECT 
		                ROWNUM AS RNUM, 
		                O.* 
		        FROM (
		                SELECT
		                        I.ID MESSAGEID             ,
		                        I.PARTNERID                ,
		                        I.STARTDATE                ,
		                        nvl(U.NICKNAME, '탈퇴회원') as PARTNERNAME ,
		                        M.MESSAGE                  ,
		                        SEND_DATE  AS SENDDATE,
		                        U.PROFILE_IMG PROFILEIMG
		                  FROM (
		                        SELECT 
		                               ID                         ,  
		                               USER_ID1 AS PARTNERID      ,
		                               USER_ID2_START_DATE AS STARTDATE
		                          FROM MESSAGE
		                         WHERE USER_ID2 = #{id}
		                         
		                     UNION ALL
		                    
		                        SELECT 
		                               ID                          , 
		                               USER_ID2 AS PARTNERID       , 
		                               USER_ID1_START_DATE AS STARTDATE
		                          FROM MESSAGE
		                         WHERE USER_ID1 = #{id}
		                       ) I 
		                       JOIN (
		                             SELECT * 
		                               FROM (
		                                     SELECT 
		                                            MESSAGE_ID  , 
		                                            MESSAGE     , 
		                                            SEND_DATE   ,
		                                            RANK() OVER (PARTITION BY MESSAGE_ID 
		                                                             ORDER BY SEND_DATE DESC) AS RANK
		                                     FROM MESSAGE_DETAIL
		                                    )
		                              WHERE RANK = 1
		                            ) M
		                         ON I.ID = M.MESSAGE_ID
		                       JOIN USERS U
		                         ON I.PARTNERID = U.ID
		                ORDER BY SEND_DATE DESC
		             ) O
		     	)
		WHERE SENDDATE > STARTDATE
	</select>
	
	<select id="getMessageRoomList" parameterType="MessageListParamDTO" resultType="MessageListDTO">
		SELECT * 
		FROM (
		        SELECT 
		                ROWNUM AS RNUM, 
		                O.* 
		        FROM (
		                SELECT
		                        I.ID MESSAGEID             ,
		                        I.PARTNERID                ,
		                        I.STARTDATE                ,
		                        nvl(U.NICKNAME, '탈퇴회원') as PARTNERNAME,
		                        M.MESSAGE                  ,
		                        SEND_DATE  AS SENDDATE     ,
		                        U.PROFILE_IMG PROFILEIMG
		                  FROM (
		                        SELECT 
		                               ID                         ,  
		                               USER_ID1 AS PARTNERID      ,
		                               USER_ID2_START_DATE AS STARTDATE
		                          FROM MESSAGE
		                         WHERE USER_ID2 = #{id}
		                         
		                     UNION ALL
		                    
		                        SELECT 
		                               ID                          , 
		                               USER_ID2 AS PARTNERID       , 
		                               USER_ID1_START_DATE AS STARTDATE
		                          FROM MESSAGE
		                         WHERE USER_ID1 = #{id}
		                       ) I 
		                       JOIN (
		                             SELECT * 
		                               FROM (
		                                     SELECT 
		                                            MESSAGE_ID  , 
		                                            MESSAGE     , 
		                                            SEND_DATE   ,
		                                            RANK() OVER (PARTITION BY MESSAGE_ID 
		                                                             ORDER BY SEND_DATE DESC) AS RANK
		                                     FROM MESSAGE_DETAIL
		                                    )
		                              WHERE RANK = 1
		                            ) M
		                         ON I.ID = M.MESSAGE_ID
		                       JOIN USERS U
		                         ON I.PARTNERID = U.ID
		                ORDER BY SEND_DATE DESC
		             ) O
		     )
		WHERE SENDDATE > STARTDATE
	</select>
	
	<select id="getMessageLogInit" parameterType="MessageLogParamDTO" resultType="MessageLogDTO" >
		SELECT 
		    I.RNUM                      ,
		    I.ID                        ,
		    I.MESSAGE_ID AS MESSAGEID   ,
		    I.SENDER_ID  AS SENDERID    ,
		    NVL(I.NICKNAME, '탈퇴회원')   AS NICKNAME            ,
		    I.MESSAGE                   ,
		    I.SEND_DATE  AS SENDDATE    ,
		    I.READ						
		FROM(
		    SELECT
		            ROWNUM AS RNUM  ,
		            B.*
		    FROM (
		            SELECT
		                    M.*,
		                    U.NICKNAME
		            FROM MESSAGE_DETAIL M
		            JOIN USERS U
		              ON  M.MESSAGE_ID = #{messageId} AND M.SENDER_ID = U.ID
		            WHERE
		            	M.SEND_DATE > TO_DATE(#{startDate},'YYYY-MM-DD HH24:MI:SS')
		            ORDER BY M.ID DESC
		         ) B 
		    ) I
		WHERE RNUM BETWEEN 1 AND 20
		ORDER BY ID
	</select>
	
	<select id="getMessageLogAppend" parameterType="MessageLogParamDTO" resultType="MessageLogDTO" >
		
		SELECT 
		    I.RNUM                      ,
		    I.ID                        ,
		    I.MESSAGE_ID AS MESSAGEID   ,
		    I.SENDER_ID  AS SENDERID    ,
		    NVL(I.NICKNAME, '탈퇴회원')   AS NICKNAME            ,
		    I.MESSAGE                   ,
		    I.SEND_DATE  AS SENDDATE    ,
		    I.READ						
		FROM(
		    SELECT
		            ROWNUM AS RNUM  ,
		            B.*
		    FROM (
		            SELECT
		                    M.*,
		                    U.NICKNAME
		            FROM MESSAGE_DETAIL M
		            JOIN USERS U
		              ON  M.MESSAGE_ID = #{messageId} AND M.SENDER_ID = U.ID
		            WHERE
		            	M.SEND_DATE > TO_DATE(#{startDate},'YYYY-MM-DD HH24:MI:SS')
		            ORDER BY M.ID DESC
		         ) B 
		    ) I
		WHERE RNUM BETWEEN #{lastChatId} AND #{lastChatId} + 19
		ORDER BY ID
	</select>
	
	<insert id="insertMessage" parameterType="MessageDTO" statementType="CALLABLE">
		{CALL MESSAGE_PACK.MESSAGE_INSERT(
			#{senderId,  mode = IN, jdbcType=NUMERIC},
			#{messageId, mode = IN, jdbcType=NUMERIC},
			#{message,   mode = IN, jdbcType=VARCHAR}
			)
		}
	</insert>
	
	<update id="setMessageStartDate" parameterType="MessageUpdateParamDTO" statementType="CALLABLE">
		{CALL MESSAGE_PACK.UPDATE_STARTDATE(
			#{messageId, mode = IN, jdbcType=NUMERIC},
			#{userId,    mode = IN, jdbcType=NUMERIC}
			)
		}
	</update>
	
	<insert id="createMessageRoom" parameterType="MessageRoomParamDTO" statementType="CALLABLE">
		{CALL MESSAGE_PACK.CREATE_MESSAGE_ROOM(
			#{userId1, mode = IN, jdbcType=NUMERIC},
			#{userId2, mode = IN, jdbcType=NUMERIC},
			#{message, mode = IN, jdbcType=VARCHAR}
			)
		}
	</insert>
	
</mapper>